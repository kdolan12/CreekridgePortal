/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.tamarack.creekridge.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.tamarack.creekridge.model.ProposalOption;
import com.tamarack.creekridge.model.ProposalOptionModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ProposalOption service. Represents a row in the &quot;eCreekRidge_ProposalOption&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.tamarack.creekridge.model.ProposalOptionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ProposalOptionImpl}.
 * </p>
 *
 * @author pmacha
 * @see ProposalOptionImpl
 * @see com.tamarack.creekridge.model.ProposalOption
 * @see com.tamarack.creekridge.model.ProposalOptionModel
 * @generated
 */
public class ProposalOptionModelImpl extends BaseModelImpl<ProposalOption>
	implements ProposalOptionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a proposal option model instance should use the {@link com.tamarack.creekridge.model.ProposalOption} interface instead.
	 */
	public static final String TABLE_NAME = "eCreekRidge_ProposalOption";
	public static final Object[][] TABLE_COLUMNS = {
			{ "proposalOptionId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "creditAppId", Types.BIGINT },
			{ "productId", Types.BIGINT },
			{ "termId", Types.BIGINT },
			{ "purchaseOptionId", Types.BIGINT },
			{ "rateFactorRuleId", Types.BIGINT },
			{ "paymentAmount", Types.DOUBLE },
			{ "equipmentPrice", Types.DOUBLE }
		};
	public static final String TABLE_SQL_CREATE = "create table eCreekRidge_ProposalOption (proposalOptionId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,creditAppId LONG,productId LONG,termId LONG,purchaseOptionId LONG,rateFactorRuleId LONG,paymentAmount DOUBLE,equipmentPrice DOUBLE)";
	public static final String TABLE_SQL_DROP = "drop table eCreekRidge_ProposalOption";
	public static final String ORDER_BY_JPQL = " ORDER BY proposalOption.proposalOptionId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY eCreekRidge_ProposalOption.proposalOptionId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.tamarack.creekridge.model.ProposalOption"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.tamarack.creekridge.model.ProposalOption"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.tamarack.creekridge.model.ProposalOption"),
			true);
	public static long CREDITAPPID_COLUMN_BITMASK = 1L;
	public static long PROPOSALOPTIONID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.tamarack.creekridge.model.ProposalOption"));

	public ProposalOptionModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _proposalOptionId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setProposalOptionId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _proposalOptionId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ProposalOption.class;
	}

	@Override
	public String getModelClassName() {
		return ProposalOption.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("proposalOptionId", getProposalOptionId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("creditAppId", getCreditAppId());
		attributes.put("productId", getProductId());
		attributes.put("termId", getTermId());
		attributes.put("purchaseOptionId", getPurchaseOptionId());
		attributes.put("rateFactorRuleId", getRateFactorRuleId());
		attributes.put("paymentAmount", getPaymentAmount());
		attributes.put("equipmentPrice", getEquipmentPrice());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long proposalOptionId = (Long)attributes.get("proposalOptionId");

		if (proposalOptionId != null) {
			setProposalOptionId(proposalOptionId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long creditAppId = (Long)attributes.get("creditAppId");

		if (creditAppId != null) {
			setCreditAppId(creditAppId);
		}

		Long productId = (Long)attributes.get("productId");

		if (productId != null) {
			setProductId(productId);
		}

		Long termId = (Long)attributes.get("termId");

		if (termId != null) {
			setTermId(termId);
		}

		Long purchaseOptionId = (Long)attributes.get("purchaseOptionId");

		if (purchaseOptionId != null) {
			setPurchaseOptionId(purchaseOptionId);
		}

		Long rateFactorRuleId = (Long)attributes.get("rateFactorRuleId");

		if (rateFactorRuleId != null) {
			setRateFactorRuleId(rateFactorRuleId);
		}

		Double paymentAmount = (Double)attributes.get("paymentAmount");

		if (paymentAmount != null) {
			setPaymentAmount(paymentAmount);
		}

		Double equipmentPrice = (Double)attributes.get("equipmentPrice");

		if (equipmentPrice != null) {
			setEquipmentPrice(equipmentPrice);
		}
	}

	@Override
	public long getProposalOptionId() {
		return _proposalOptionId;
	}

	@Override
	public void setProposalOptionId(long proposalOptionId) {
		_columnBitmask |= PROPOSALOPTIONID_COLUMN_BITMASK;

		if (!_setOriginalProposalOptionId) {
			_setOriginalProposalOptionId = true;

			_originalProposalOptionId = _proposalOptionId;
		}

		_proposalOptionId = proposalOptionId;
	}

	public long getOriginalProposalOptionId() {
		return _originalProposalOptionId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getCreditAppId() {
		return _creditAppId;
	}

	@Override
	public void setCreditAppId(long creditAppId) {
		_columnBitmask |= CREDITAPPID_COLUMN_BITMASK;

		if (!_setOriginalCreditAppId) {
			_setOriginalCreditAppId = true;

			_originalCreditAppId = _creditAppId;
		}

		_creditAppId = creditAppId;
	}

	public long getOriginalCreditAppId() {
		return _originalCreditAppId;
	}

	@Override
	public long getProductId() {
		return _productId;
	}

	@Override
	public void setProductId(long productId) {
		_productId = productId;
	}

	@Override
	public long getTermId() {
		return _termId;
	}

	@Override
	public void setTermId(long termId) {
		_termId = termId;
	}

	@Override
	public long getPurchaseOptionId() {
		return _purchaseOptionId;
	}

	@Override
	public void setPurchaseOptionId(long purchaseOptionId) {
		_purchaseOptionId = purchaseOptionId;
	}

	@Override
	public long getRateFactorRuleId() {
		return _rateFactorRuleId;
	}

	@Override
	public void setRateFactorRuleId(long rateFactorRuleId) {
		_rateFactorRuleId = rateFactorRuleId;
	}

	@Override
	public double getPaymentAmount() {
		return _paymentAmount;
	}

	@Override
	public void setPaymentAmount(double paymentAmount) {
		_paymentAmount = paymentAmount;
	}

	@Override
	public double getEquipmentPrice() {
		return _equipmentPrice;
	}

	@Override
	public void setEquipmentPrice(double equipmentPrice) {
		_equipmentPrice = equipmentPrice;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ProposalOption.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ProposalOption toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ProposalOption)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ProposalOptionImpl proposalOptionImpl = new ProposalOptionImpl();

		proposalOptionImpl.setProposalOptionId(getProposalOptionId());
		proposalOptionImpl.setCompanyId(getCompanyId());
		proposalOptionImpl.setUserId(getUserId());
		proposalOptionImpl.setUserName(getUserName());
		proposalOptionImpl.setCreateDate(getCreateDate());
		proposalOptionImpl.setModifiedDate(getModifiedDate());
		proposalOptionImpl.setCreditAppId(getCreditAppId());
		proposalOptionImpl.setProductId(getProductId());
		proposalOptionImpl.setTermId(getTermId());
		proposalOptionImpl.setPurchaseOptionId(getPurchaseOptionId());
		proposalOptionImpl.setRateFactorRuleId(getRateFactorRuleId());
		proposalOptionImpl.setPaymentAmount(getPaymentAmount());
		proposalOptionImpl.setEquipmentPrice(getEquipmentPrice());

		proposalOptionImpl.resetOriginalValues();

		return proposalOptionImpl;
	}

	@Override
	public int compareTo(ProposalOption proposalOption) {
		long primaryKey = proposalOption.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ProposalOption)) {
			return false;
		}

		ProposalOption proposalOption = (ProposalOption)obj;

		long primaryKey = proposalOption.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ProposalOptionModelImpl proposalOptionModelImpl = this;

		proposalOptionModelImpl._originalProposalOptionId = proposalOptionModelImpl._proposalOptionId;

		proposalOptionModelImpl._setOriginalProposalOptionId = false;

		proposalOptionModelImpl._originalCreditAppId = proposalOptionModelImpl._creditAppId;

		proposalOptionModelImpl._setOriginalCreditAppId = false;

		proposalOptionModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ProposalOption> toCacheModel() {
		ProposalOptionCacheModel proposalOptionCacheModel = new ProposalOptionCacheModel();

		proposalOptionCacheModel.proposalOptionId = getProposalOptionId();

		proposalOptionCacheModel.companyId = getCompanyId();

		proposalOptionCacheModel.userId = getUserId();

		proposalOptionCacheModel.userName = getUserName();

		String userName = proposalOptionCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			proposalOptionCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			proposalOptionCacheModel.createDate = createDate.getTime();
		}
		else {
			proposalOptionCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			proposalOptionCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			proposalOptionCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		proposalOptionCacheModel.creditAppId = getCreditAppId();

		proposalOptionCacheModel.productId = getProductId();

		proposalOptionCacheModel.termId = getTermId();

		proposalOptionCacheModel.purchaseOptionId = getPurchaseOptionId();

		proposalOptionCacheModel.rateFactorRuleId = getRateFactorRuleId();

		proposalOptionCacheModel.paymentAmount = getPaymentAmount();

		proposalOptionCacheModel.equipmentPrice = getEquipmentPrice();

		return proposalOptionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{proposalOptionId=");
		sb.append(getProposalOptionId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", creditAppId=");
		sb.append(getCreditAppId());
		sb.append(", productId=");
		sb.append(getProductId());
		sb.append(", termId=");
		sb.append(getTermId());
		sb.append(", purchaseOptionId=");
		sb.append(getPurchaseOptionId());
		sb.append(", rateFactorRuleId=");
		sb.append(getRateFactorRuleId());
		sb.append(", paymentAmount=");
		sb.append(getPaymentAmount());
		sb.append(", equipmentPrice=");
		sb.append(getEquipmentPrice());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.tamarack.creekridge.model.ProposalOption");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>proposalOptionId</column-name><column-value><![CDATA[");
		sb.append(getProposalOptionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creditAppId</column-name><column-value><![CDATA[");
		sb.append(getCreditAppId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productId</column-name><column-value><![CDATA[");
		sb.append(getProductId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>termId</column-name><column-value><![CDATA[");
		sb.append(getTermId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>purchaseOptionId</column-name><column-value><![CDATA[");
		sb.append(getPurchaseOptionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rateFactorRuleId</column-name><column-value><![CDATA[");
		sb.append(getRateFactorRuleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentAmount</column-name><column-value><![CDATA[");
		sb.append(getPaymentAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>equipmentPrice</column-name><column-value><![CDATA[");
		sb.append(getEquipmentPrice());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ProposalOption.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ProposalOption.class
		};
	private long _proposalOptionId;
	private long _originalProposalOptionId;
	private boolean _setOriginalProposalOptionId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _creditAppId;
	private long _originalCreditAppId;
	private boolean _setOriginalCreditAppId;
	private long _productId;
	private long _termId;
	private long _purchaseOptionId;
	private long _rateFactorRuleId;
	private double _paymentAmount;
	private double _equipmentPrice;
	private long _columnBitmask;
	private ProposalOption _escapedModel;
}