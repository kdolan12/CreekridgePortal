/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.tamarack.creekridge.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.tamarack.creekridge.model.CreditApp;
import com.tamarack.creekridge.model.CreditAppModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CreditApp service. Represents a row in the &quot;eCreekRidge_CreditApp&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.tamarack.creekridge.model.CreditAppModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CreditAppImpl}.
 * </p>
 *
 * @author pmacha
 * @see CreditAppImpl
 * @see com.tamarack.creekridge.model.CreditApp
 * @see com.tamarack.creekridge.model.CreditAppModel
 * @generated
 */
public class CreditAppModelImpl extends BaseModelImpl<CreditApp>
	implements CreditAppModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a credit app model instance should use the {@link com.tamarack.creekridge.model.CreditApp} interface instead.
	 */
	public static final String TABLE_NAME = "eCreekRidge_CreditApp";
	public static final Object[][] TABLE_COLUMNS = {
			{ "creditAppId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "vendorId", Types.BIGINT },
			{ "creditAppStatusId", Types.BIGINT },
			{ "productId", Types.BIGINT },
			{ "termId", Types.BIGINT },
			{ "purchaseOptionId", Types.BIGINT },
			{ "rateFactorRuleId", Types.BIGINT },
			{ "paymentAmount", Types.DOUBLE },
			{ "equipmentPrice", Types.DOUBLE },
			{ "equipmentDesc", Types.VARCHAR },
			{ "equipmentLocAsCustomerFlag", Types.BOOLEAN },
			{ "equipmentAddress1", Types.VARCHAR },
			{ "equipmentAddress2", Types.VARCHAR },
			{ "equipmentCity", Types.VARCHAR },
			{ "equipmentState", Types.VARCHAR },
			{ "equipmentZip", Types.VARCHAR },
			{ "CustomerName", Types.VARCHAR },
			{ "CustomerDBAName", Types.VARCHAR },
			{ "CustomerAddress1", Types.VARCHAR },
			{ "CustomerAddress2", Types.VARCHAR },
			{ "CustomerCity", Types.VARCHAR },
			{ "CustomerState", Types.VARCHAR },
			{ "CustomerZip", Types.VARCHAR },
			{ "CustomerContact", Types.VARCHAR },
			{ "CustomerContactPhone", Types.VARCHAR },
			{ "CustomerContactFax", Types.VARCHAR },
			{ "CustomerContactEmail", Types.VARCHAR },
			{ "CustomerBusinessDesc", Types.VARCHAR },
			{ "CustomerBusinessType", Types.VARCHAR },
			{ "CustomerBusinessStartDate", Types.TIMESTAMP },
			{ "CustomerBusinessIncorporatedState", Types.VARCHAR },
			{ "CustomerBusinessFederalTaxID", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table eCreekRidge_CreditApp (creditAppId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,vendorId LONG,creditAppStatusId LONG,productId LONG,termId LONG,purchaseOptionId LONG,rateFactorRuleId LONG,paymentAmount DOUBLE,equipmentPrice DOUBLE,equipmentDesc VARCHAR(75) null,equipmentLocAsCustomerFlag BOOLEAN,equipmentAddress1 VARCHAR(75) null,equipmentAddress2 VARCHAR(75) null,equipmentCity VARCHAR(75) null,equipmentState VARCHAR(75) null,equipmentZip VARCHAR(75) null,CustomerName VARCHAR(75) null,CustomerDBAName VARCHAR(75) null,CustomerAddress1 VARCHAR(75) null,CustomerAddress2 VARCHAR(75) null,CustomerCity VARCHAR(75) null,CustomerState VARCHAR(75) null,CustomerZip VARCHAR(75) null,CustomerContact VARCHAR(75) null,CustomerContactPhone VARCHAR(75) null,CustomerContactFax VARCHAR(75) null,CustomerContactEmail VARCHAR(75) null,CustomerBusinessDesc VARCHAR(75) null,CustomerBusinessType VARCHAR(75) null,CustomerBusinessStartDate DATE null,CustomerBusinessIncorporatedState VARCHAR(75) null,CustomerBusinessFederalTaxID VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table eCreekRidge_CreditApp";
	public static final String ORDER_BY_JPQL = " ORDER BY creditApp.modifiedDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY eCreekRidge_CreditApp.modifiedDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.tamarack.creekridge.model.CreditApp"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.tamarack.creekridge.model.CreditApp"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.tamarack.creekridge.model.CreditApp"),
			true);
	public static long CREDITAPPID_COLUMN_BITMASK = 1L;
	public static long CREDITAPPSTATUSID_COLUMN_BITMASK = 2L;
	public static long MODIFIEDDATE_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.tamarack.creekridge.model.CreditApp"));

	public CreditAppModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _creditAppId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCreditAppId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _creditAppId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CreditApp.class;
	}

	@Override
	public String getModelClassName() {
		return CreditApp.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("creditAppId", getCreditAppId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("vendorId", getVendorId());
		attributes.put("creditAppStatusId", getCreditAppStatusId());
		attributes.put("productId", getProductId());
		attributes.put("termId", getTermId());
		attributes.put("purchaseOptionId", getPurchaseOptionId());
		attributes.put("rateFactorRuleId", getRateFactorRuleId());
		attributes.put("paymentAmount", getPaymentAmount());
		attributes.put("equipmentPrice", getEquipmentPrice());
		attributes.put("equipmentDesc", getEquipmentDesc());
		attributes.put("equipmentLocAsCustomerFlag",
			getEquipmentLocAsCustomerFlag());
		attributes.put("equipmentAddress1", getEquipmentAddress1());
		attributes.put("equipmentAddress2", getEquipmentAddress2());
		attributes.put("equipmentCity", getEquipmentCity());
		attributes.put("equipmentState", getEquipmentState());
		attributes.put("equipmentZip", getEquipmentZip());
		attributes.put("CustomerName", getCustomerName());
		attributes.put("CustomerDBAName", getCustomerDBAName());
		attributes.put("CustomerAddress1", getCustomerAddress1());
		attributes.put("CustomerAddress2", getCustomerAddress2());
		attributes.put("CustomerCity", getCustomerCity());
		attributes.put("CustomerState", getCustomerState());
		attributes.put("CustomerZip", getCustomerZip());
		attributes.put("CustomerContact", getCustomerContact());
		attributes.put("CustomerContactPhone", getCustomerContactPhone());
		attributes.put("CustomerContactFax", getCustomerContactFax());
		attributes.put("CustomerContactEmail", getCustomerContactEmail());
		attributes.put("CustomerBusinessDesc", getCustomerBusinessDesc());
		attributes.put("CustomerBusinessType", getCustomerBusinessType());
		attributes.put("CustomerBusinessStartDate",
			getCustomerBusinessStartDate());
		attributes.put("CustomerBusinessIncorporatedState",
			getCustomerBusinessIncorporatedState());
		attributes.put("CustomerBusinessFederalTaxID",
			getCustomerBusinessFederalTaxID());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long creditAppId = (Long)attributes.get("creditAppId");

		if (creditAppId != null) {
			setCreditAppId(creditAppId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long vendorId = (Long)attributes.get("vendorId");

		if (vendorId != null) {
			setVendorId(vendorId);
		}

		Long creditAppStatusId = (Long)attributes.get("creditAppStatusId");

		if (creditAppStatusId != null) {
			setCreditAppStatusId(creditAppStatusId);
		}

		Long productId = (Long)attributes.get("productId");

		if (productId != null) {
			setProductId(productId);
		}

		Long termId = (Long)attributes.get("termId");

		if (termId != null) {
			setTermId(termId);
		}

		Long purchaseOptionId = (Long)attributes.get("purchaseOptionId");

		if (purchaseOptionId != null) {
			setPurchaseOptionId(purchaseOptionId);
		}

		Long rateFactorRuleId = (Long)attributes.get("rateFactorRuleId");

		if (rateFactorRuleId != null) {
			setRateFactorRuleId(rateFactorRuleId);
		}

		Double paymentAmount = (Double)attributes.get("paymentAmount");

		if (paymentAmount != null) {
			setPaymentAmount(paymentAmount);
		}

		Double equipmentPrice = (Double)attributes.get("equipmentPrice");

		if (equipmentPrice != null) {
			setEquipmentPrice(equipmentPrice);
		}

		String equipmentDesc = (String)attributes.get("equipmentDesc");

		if (equipmentDesc != null) {
			setEquipmentDesc(equipmentDesc);
		}

		Boolean equipmentLocAsCustomerFlag = (Boolean)attributes.get(
				"equipmentLocAsCustomerFlag");

		if (equipmentLocAsCustomerFlag != null) {
			setEquipmentLocAsCustomerFlag(equipmentLocAsCustomerFlag);
		}

		String equipmentAddress1 = (String)attributes.get("equipmentAddress1");

		if (equipmentAddress1 != null) {
			setEquipmentAddress1(equipmentAddress1);
		}

		String equipmentAddress2 = (String)attributes.get("equipmentAddress2");

		if (equipmentAddress2 != null) {
			setEquipmentAddress2(equipmentAddress2);
		}

		String equipmentCity = (String)attributes.get("equipmentCity");

		if (equipmentCity != null) {
			setEquipmentCity(equipmentCity);
		}

		String equipmentState = (String)attributes.get("equipmentState");

		if (equipmentState != null) {
			setEquipmentState(equipmentState);
		}

		String equipmentZip = (String)attributes.get("equipmentZip");

		if (equipmentZip != null) {
			setEquipmentZip(equipmentZip);
		}

		String CustomerName = (String)attributes.get("CustomerName");

		if (CustomerName != null) {
			setCustomerName(CustomerName);
		}

		String CustomerDBAName = (String)attributes.get("CustomerDBAName");

		if (CustomerDBAName != null) {
			setCustomerDBAName(CustomerDBAName);
		}

		String CustomerAddress1 = (String)attributes.get("CustomerAddress1");

		if (CustomerAddress1 != null) {
			setCustomerAddress1(CustomerAddress1);
		}

		String CustomerAddress2 = (String)attributes.get("CustomerAddress2");

		if (CustomerAddress2 != null) {
			setCustomerAddress2(CustomerAddress2);
		}

		String CustomerCity = (String)attributes.get("CustomerCity");

		if (CustomerCity != null) {
			setCustomerCity(CustomerCity);
		}

		String CustomerState = (String)attributes.get("CustomerState");

		if (CustomerState != null) {
			setCustomerState(CustomerState);
		}

		String CustomerZip = (String)attributes.get("CustomerZip");

		if (CustomerZip != null) {
			setCustomerZip(CustomerZip);
		}

		String CustomerContact = (String)attributes.get("CustomerContact");

		if (CustomerContact != null) {
			setCustomerContact(CustomerContact);
		}

		String CustomerContactPhone = (String)attributes.get(
				"CustomerContactPhone");

		if (CustomerContactPhone != null) {
			setCustomerContactPhone(CustomerContactPhone);
		}

		String CustomerContactFax = (String)attributes.get("CustomerContactFax");

		if (CustomerContactFax != null) {
			setCustomerContactFax(CustomerContactFax);
		}

		String CustomerContactEmail = (String)attributes.get(
				"CustomerContactEmail");

		if (CustomerContactEmail != null) {
			setCustomerContactEmail(CustomerContactEmail);
		}

		String CustomerBusinessDesc = (String)attributes.get(
				"CustomerBusinessDesc");

		if (CustomerBusinessDesc != null) {
			setCustomerBusinessDesc(CustomerBusinessDesc);
		}

		String CustomerBusinessType = (String)attributes.get(
				"CustomerBusinessType");

		if (CustomerBusinessType != null) {
			setCustomerBusinessType(CustomerBusinessType);
		}

		Date CustomerBusinessStartDate = (Date)attributes.get(
				"CustomerBusinessStartDate");

		if (CustomerBusinessStartDate != null) {
			setCustomerBusinessStartDate(CustomerBusinessStartDate);
		}

		String CustomerBusinessIncorporatedState = (String)attributes.get(
				"CustomerBusinessIncorporatedState");

		if (CustomerBusinessIncorporatedState != null) {
			setCustomerBusinessIncorporatedState(CustomerBusinessIncorporatedState);
		}

		String CustomerBusinessFederalTaxID = (String)attributes.get(
				"CustomerBusinessFederalTaxID");

		if (CustomerBusinessFederalTaxID != null) {
			setCustomerBusinessFederalTaxID(CustomerBusinessFederalTaxID);
		}
	}

	@Override
	public long getCreditAppId() {
		return _creditAppId;
	}

	@Override
	public void setCreditAppId(long creditAppId) {
		_columnBitmask |= CREDITAPPID_COLUMN_BITMASK;

		if (!_setOriginalCreditAppId) {
			_setOriginalCreditAppId = true;

			_originalCreditAppId = _creditAppId;
		}

		_creditAppId = creditAppId;
	}

	public long getOriginalCreditAppId() {
		return _originalCreditAppId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_columnBitmask = -1L;

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getVendorId() {
		return _vendorId;
	}

	@Override
	public void setVendorId(long vendorId) {
		_vendorId = vendorId;
	}

	@Override
	public long getCreditAppStatusId() {
		return _creditAppStatusId;
	}

	@Override
	public void setCreditAppStatusId(long creditAppStatusId) {
		_columnBitmask |= CREDITAPPSTATUSID_COLUMN_BITMASK;

		if (!_setOriginalCreditAppStatusId) {
			_setOriginalCreditAppStatusId = true;

			_originalCreditAppStatusId = _creditAppStatusId;
		}

		_creditAppStatusId = creditAppStatusId;
	}

	public long getOriginalCreditAppStatusId() {
		return _originalCreditAppStatusId;
	}

	@Override
	public long getProductId() {
		return _productId;
	}

	@Override
	public void setProductId(long productId) {
		_productId = productId;
	}

	@Override
	public long getTermId() {
		return _termId;
	}

	@Override
	public void setTermId(long termId) {
		_termId = termId;
	}

	@Override
	public long getPurchaseOptionId() {
		return _purchaseOptionId;
	}

	@Override
	public void setPurchaseOptionId(long purchaseOptionId) {
		_purchaseOptionId = purchaseOptionId;
	}

	@Override
	public long getRateFactorRuleId() {
		return _rateFactorRuleId;
	}

	@Override
	public void setRateFactorRuleId(long rateFactorRuleId) {
		_rateFactorRuleId = rateFactorRuleId;
	}

	@Override
	public double getPaymentAmount() {
		return _paymentAmount;
	}

	@Override
	public void setPaymentAmount(double paymentAmount) {
		_paymentAmount = paymentAmount;
	}

	@Override
	public double getEquipmentPrice() {
		return _equipmentPrice;
	}

	@Override
	public void setEquipmentPrice(double equipmentPrice) {
		_equipmentPrice = equipmentPrice;
	}

	@Override
	public String getEquipmentDesc() {
		if (_equipmentDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _equipmentDesc;
		}
	}

	@Override
	public void setEquipmentDesc(String equipmentDesc) {
		_equipmentDesc = equipmentDesc;
	}

	@Override
	public boolean getEquipmentLocAsCustomerFlag() {
		return _equipmentLocAsCustomerFlag;
	}

	@Override
	public boolean isEquipmentLocAsCustomerFlag() {
		return _equipmentLocAsCustomerFlag;
	}

	@Override
	public void setEquipmentLocAsCustomerFlag(
		boolean equipmentLocAsCustomerFlag) {
		_equipmentLocAsCustomerFlag = equipmentLocAsCustomerFlag;
	}

	@Override
	public String getEquipmentAddress1() {
		if (_equipmentAddress1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _equipmentAddress1;
		}
	}

	@Override
	public void setEquipmentAddress1(String equipmentAddress1) {
		_equipmentAddress1 = equipmentAddress1;
	}

	@Override
	public String getEquipmentAddress2() {
		if (_equipmentAddress2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _equipmentAddress2;
		}
	}

	@Override
	public void setEquipmentAddress2(String equipmentAddress2) {
		_equipmentAddress2 = equipmentAddress2;
	}

	@Override
	public String getEquipmentCity() {
		if (_equipmentCity == null) {
			return StringPool.BLANK;
		}
		else {
			return _equipmentCity;
		}
	}

	@Override
	public void setEquipmentCity(String equipmentCity) {
		_equipmentCity = equipmentCity;
	}

	@Override
	public String getEquipmentState() {
		if (_equipmentState == null) {
			return StringPool.BLANK;
		}
		else {
			return _equipmentState;
		}
	}

	@Override
	public void setEquipmentState(String equipmentState) {
		_equipmentState = equipmentState;
	}

	@Override
	public String getEquipmentZip() {
		if (_equipmentZip == null) {
			return StringPool.BLANK;
		}
		else {
			return _equipmentZip;
		}
	}

	@Override
	public void setEquipmentZip(String equipmentZip) {
		_equipmentZip = equipmentZip;
	}

	@Override
	public String getCustomerName() {
		if (_CustomerName == null) {
			return StringPool.BLANK;
		}
		else {
			return _CustomerName;
		}
	}

	@Override
	public void setCustomerName(String CustomerName) {
		_CustomerName = CustomerName;
	}

	@Override
	public String getCustomerDBAName() {
		if (_CustomerDBAName == null) {
			return StringPool.BLANK;
		}
		else {
			return _CustomerDBAName;
		}
	}

	@Override
	public void setCustomerDBAName(String CustomerDBAName) {
		_CustomerDBAName = CustomerDBAName;
	}

	@Override
	public String getCustomerAddress1() {
		if (_CustomerAddress1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _CustomerAddress1;
		}
	}

	@Override
	public void setCustomerAddress1(String CustomerAddress1) {
		_CustomerAddress1 = CustomerAddress1;
	}

	@Override
	public String getCustomerAddress2() {
		if (_CustomerAddress2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _CustomerAddress2;
		}
	}

	@Override
	public void setCustomerAddress2(String CustomerAddress2) {
		_CustomerAddress2 = CustomerAddress2;
	}

	@Override
	public String getCustomerCity() {
		if (_CustomerCity == null) {
			return StringPool.BLANK;
		}
		else {
			return _CustomerCity;
		}
	}

	@Override
	public void setCustomerCity(String CustomerCity) {
		_CustomerCity = CustomerCity;
	}

	@Override
	public String getCustomerState() {
		if (_CustomerState == null) {
			return StringPool.BLANK;
		}
		else {
			return _CustomerState;
		}
	}

	@Override
	public void setCustomerState(String CustomerState) {
		_CustomerState = CustomerState;
	}

	@Override
	public String getCustomerZip() {
		if (_CustomerZip == null) {
			return StringPool.BLANK;
		}
		else {
			return _CustomerZip;
		}
	}

	@Override
	public void setCustomerZip(String CustomerZip) {
		_CustomerZip = CustomerZip;
	}

	@Override
	public String getCustomerContact() {
		if (_CustomerContact == null) {
			return StringPool.BLANK;
		}
		else {
			return _CustomerContact;
		}
	}

	@Override
	public void setCustomerContact(String CustomerContact) {
		_CustomerContact = CustomerContact;
	}

	@Override
	public String getCustomerContactPhone() {
		if (_CustomerContactPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _CustomerContactPhone;
		}
	}

	@Override
	public void setCustomerContactPhone(String CustomerContactPhone) {
		_CustomerContactPhone = CustomerContactPhone;
	}

	@Override
	public String getCustomerContactFax() {
		if (_CustomerContactFax == null) {
			return StringPool.BLANK;
		}
		else {
			return _CustomerContactFax;
		}
	}

	@Override
	public void setCustomerContactFax(String CustomerContactFax) {
		_CustomerContactFax = CustomerContactFax;
	}

	@Override
	public String getCustomerContactEmail() {
		if (_CustomerContactEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _CustomerContactEmail;
		}
	}

	@Override
	public void setCustomerContactEmail(String CustomerContactEmail) {
		_CustomerContactEmail = CustomerContactEmail;
	}

	@Override
	public String getCustomerBusinessDesc() {
		if (_CustomerBusinessDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _CustomerBusinessDesc;
		}
	}

	@Override
	public void setCustomerBusinessDesc(String CustomerBusinessDesc) {
		_CustomerBusinessDesc = CustomerBusinessDesc;
	}

	@Override
	public String getCustomerBusinessType() {
		if (_CustomerBusinessType == null) {
			return StringPool.BLANK;
		}
		else {
			return _CustomerBusinessType;
		}
	}

	@Override
	public void setCustomerBusinessType(String CustomerBusinessType) {
		_CustomerBusinessType = CustomerBusinessType;
	}

	@Override
	public Date getCustomerBusinessStartDate() {
		return _CustomerBusinessStartDate;
	}

	@Override
	public void setCustomerBusinessStartDate(Date CustomerBusinessStartDate) {
		_CustomerBusinessStartDate = CustomerBusinessStartDate;
	}

	@Override
	public String getCustomerBusinessIncorporatedState() {
		if (_CustomerBusinessIncorporatedState == null) {
			return StringPool.BLANK;
		}
		else {
			return _CustomerBusinessIncorporatedState;
		}
	}

	@Override
	public void setCustomerBusinessIncorporatedState(
		String CustomerBusinessIncorporatedState) {
		_CustomerBusinessIncorporatedState = CustomerBusinessIncorporatedState;
	}

	@Override
	public String getCustomerBusinessFederalTaxID() {
		if (_CustomerBusinessFederalTaxID == null) {
			return StringPool.BLANK;
		}
		else {
			return _CustomerBusinessFederalTaxID;
		}
	}

	@Override
	public void setCustomerBusinessFederalTaxID(
		String CustomerBusinessFederalTaxID) {
		_CustomerBusinessFederalTaxID = CustomerBusinessFederalTaxID;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CreditApp.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CreditApp toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CreditApp)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CreditAppImpl creditAppImpl = new CreditAppImpl();

		creditAppImpl.setCreditAppId(getCreditAppId());
		creditAppImpl.setCompanyId(getCompanyId());
		creditAppImpl.setUserId(getUserId());
		creditAppImpl.setUserName(getUserName());
		creditAppImpl.setCreateDate(getCreateDate());
		creditAppImpl.setModifiedDate(getModifiedDate());
		creditAppImpl.setVendorId(getVendorId());
		creditAppImpl.setCreditAppStatusId(getCreditAppStatusId());
		creditAppImpl.setProductId(getProductId());
		creditAppImpl.setTermId(getTermId());
		creditAppImpl.setPurchaseOptionId(getPurchaseOptionId());
		creditAppImpl.setRateFactorRuleId(getRateFactorRuleId());
		creditAppImpl.setPaymentAmount(getPaymentAmount());
		creditAppImpl.setEquipmentPrice(getEquipmentPrice());
		creditAppImpl.setEquipmentDesc(getEquipmentDesc());
		creditAppImpl.setEquipmentLocAsCustomerFlag(getEquipmentLocAsCustomerFlag());
		creditAppImpl.setEquipmentAddress1(getEquipmentAddress1());
		creditAppImpl.setEquipmentAddress2(getEquipmentAddress2());
		creditAppImpl.setEquipmentCity(getEquipmentCity());
		creditAppImpl.setEquipmentState(getEquipmentState());
		creditAppImpl.setEquipmentZip(getEquipmentZip());
		creditAppImpl.setCustomerName(getCustomerName());
		creditAppImpl.setCustomerDBAName(getCustomerDBAName());
		creditAppImpl.setCustomerAddress1(getCustomerAddress1());
		creditAppImpl.setCustomerAddress2(getCustomerAddress2());
		creditAppImpl.setCustomerCity(getCustomerCity());
		creditAppImpl.setCustomerState(getCustomerState());
		creditAppImpl.setCustomerZip(getCustomerZip());
		creditAppImpl.setCustomerContact(getCustomerContact());
		creditAppImpl.setCustomerContactPhone(getCustomerContactPhone());
		creditAppImpl.setCustomerContactFax(getCustomerContactFax());
		creditAppImpl.setCustomerContactEmail(getCustomerContactEmail());
		creditAppImpl.setCustomerBusinessDesc(getCustomerBusinessDesc());
		creditAppImpl.setCustomerBusinessType(getCustomerBusinessType());
		creditAppImpl.setCustomerBusinessStartDate(getCustomerBusinessStartDate());
		creditAppImpl.setCustomerBusinessIncorporatedState(getCustomerBusinessIncorporatedState());
		creditAppImpl.setCustomerBusinessFederalTaxID(getCustomerBusinessFederalTaxID());

		creditAppImpl.resetOriginalValues();

		return creditAppImpl;
	}

	@Override
	public int compareTo(CreditApp creditApp) {
		int value = 0;

		value = DateUtil.compareTo(getModifiedDate(),
				creditApp.getModifiedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CreditApp)) {
			return false;
		}

		CreditApp creditApp = (CreditApp)obj;

		long primaryKey = creditApp.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CreditAppModelImpl creditAppModelImpl = this;

		creditAppModelImpl._originalCreditAppId = creditAppModelImpl._creditAppId;

		creditAppModelImpl._setOriginalCreditAppId = false;

		creditAppModelImpl._originalCreditAppStatusId = creditAppModelImpl._creditAppStatusId;

		creditAppModelImpl._setOriginalCreditAppStatusId = false;

		creditAppModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CreditApp> toCacheModel() {
		CreditAppCacheModel creditAppCacheModel = new CreditAppCacheModel();

		creditAppCacheModel.creditAppId = getCreditAppId();

		creditAppCacheModel.companyId = getCompanyId();

		creditAppCacheModel.userId = getUserId();

		creditAppCacheModel.userName = getUserName();

		String userName = creditAppCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			creditAppCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			creditAppCacheModel.createDate = createDate.getTime();
		}
		else {
			creditAppCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			creditAppCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			creditAppCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		creditAppCacheModel.vendorId = getVendorId();

		creditAppCacheModel.creditAppStatusId = getCreditAppStatusId();

		creditAppCacheModel.productId = getProductId();

		creditAppCacheModel.termId = getTermId();

		creditAppCacheModel.purchaseOptionId = getPurchaseOptionId();

		creditAppCacheModel.rateFactorRuleId = getRateFactorRuleId();

		creditAppCacheModel.paymentAmount = getPaymentAmount();

		creditAppCacheModel.equipmentPrice = getEquipmentPrice();

		creditAppCacheModel.equipmentDesc = getEquipmentDesc();

		String equipmentDesc = creditAppCacheModel.equipmentDesc;

		if ((equipmentDesc != null) && (equipmentDesc.length() == 0)) {
			creditAppCacheModel.equipmentDesc = null;
		}

		creditAppCacheModel.equipmentLocAsCustomerFlag = getEquipmentLocAsCustomerFlag();

		creditAppCacheModel.equipmentAddress1 = getEquipmentAddress1();

		String equipmentAddress1 = creditAppCacheModel.equipmentAddress1;

		if ((equipmentAddress1 != null) && (equipmentAddress1.length() == 0)) {
			creditAppCacheModel.equipmentAddress1 = null;
		}

		creditAppCacheModel.equipmentAddress2 = getEquipmentAddress2();

		String equipmentAddress2 = creditAppCacheModel.equipmentAddress2;

		if ((equipmentAddress2 != null) && (equipmentAddress2.length() == 0)) {
			creditAppCacheModel.equipmentAddress2 = null;
		}

		creditAppCacheModel.equipmentCity = getEquipmentCity();

		String equipmentCity = creditAppCacheModel.equipmentCity;

		if ((equipmentCity != null) && (equipmentCity.length() == 0)) {
			creditAppCacheModel.equipmentCity = null;
		}

		creditAppCacheModel.equipmentState = getEquipmentState();

		String equipmentState = creditAppCacheModel.equipmentState;

		if ((equipmentState != null) && (equipmentState.length() == 0)) {
			creditAppCacheModel.equipmentState = null;
		}

		creditAppCacheModel.equipmentZip = getEquipmentZip();

		String equipmentZip = creditAppCacheModel.equipmentZip;

		if ((equipmentZip != null) && (equipmentZip.length() == 0)) {
			creditAppCacheModel.equipmentZip = null;
		}

		creditAppCacheModel.CustomerName = getCustomerName();

		String CustomerName = creditAppCacheModel.CustomerName;

		if ((CustomerName != null) && (CustomerName.length() == 0)) {
			creditAppCacheModel.CustomerName = null;
		}

		creditAppCacheModel.CustomerDBAName = getCustomerDBAName();

		String CustomerDBAName = creditAppCacheModel.CustomerDBAName;

		if ((CustomerDBAName != null) && (CustomerDBAName.length() == 0)) {
			creditAppCacheModel.CustomerDBAName = null;
		}

		creditAppCacheModel.CustomerAddress1 = getCustomerAddress1();

		String CustomerAddress1 = creditAppCacheModel.CustomerAddress1;

		if ((CustomerAddress1 != null) && (CustomerAddress1.length() == 0)) {
			creditAppCacheModel.CustomerAddress1 = null;
		}

		creditAppCacheModel.CustomerAddress2 = getCustomerAddress2();

		String CustomerAddress2 = creditAppCacheModel.CustomerAddress2;

		if ((CustomerAddress2 != null) && (CustomerAddress2.length() == 0)) {
			creditAppCacheModel.CustomerAddress2 = null;
		}

		creditAppCacheModel.CustomerCity = getCustomerCity();

		String CustomerCity = creditAppCacheModel.CustomerCity;

		if ((CustomerCity != null) && (CustomerCity.length() == 0)) {
			creditAppCacheModel.CustomerCity = null;
		}

		creditAppCacheModel.CustomerState = getCustomerState();

		String CustomerState = creditAppCacheModel.CustomerState;

		if ((CustomerState != null) && (CustomerState.length() == 0)) {
			creditAppCacheModel.CustomerState = null;
		}

		creditAppCacheModel.CustomerZip = getCustomerZip();

		String CustomerZip = creditAppCacheModel.CustomerZip;

		if ((CustomerZip != null) && (CustomerZip.length() == 0)) {
			creditAppCacheModel.CustomerZip = null;
		}

		creditAppCacheModel.CustomerContact = getCustomerContact();

		String CustomerContact = creditAppCacheModel.CustomerContact;

		if ((CustomerContact != null) && (CustomerContact.length() == 0)) {
			creditAppCacheModel.CustomerContact = null;
		}

		creditAppCacheModel.CustomerContactPhone = getCustomerContactPhone();

		String CustomerContactPhone = creditAppCacheModel.CustomerContactPhone;

		if ((CustomerContactPhone != null) &&
				(CustomerContactPhone.length() == 0)) {
			creditAppCacheModel.CustomerContactPhone = null;
		}

		creditAppCacheModel.CustomerContactFax = getCustomerContactFax();

		String CustomerContactFax = creditAppCacheModel.CustomerContactFax;

		if ((CustomerContactFax != null) && (CustomerContactFax.length() == 0)) {
			creditAppCacheModel.CustomerContactFax = null;
		}

		creditAppCacheModel.CustomerContactEmail = getCustomerContactEmail();

		String CustomerContactEmail = creditAppCacheModel.CustomerContactEmail;

		if ((CustomerContactEmail != null) &&
				(CustomerContactEmail.length() == 0)) {
			creditAppCacheModel.CustomerContactEmail = null;
		}

		creditAppCacheModel.CustomerBusinessDesc = getCustomerBusinessDesc();

		String CustomerBusinessDesc = creditAppCacheModel.CustomerBusinessDesc;

		if ((CustomerBusinessDesc != null) &&
				(CustomerBusinessDesc.length() == 0)) {
			creditAppCacheModel.CustomerBusinessDesc = null;
		}

		creditAppCacheModel.CustomerBusinessType = getCustomerBusinessType();

		String CustomerBusinessType = creditAppCacheModel.CustomerBusinessType;

		if ((CustomerBusinessType != null) &&
				(CustomerBusinessType.length() == 0)) {
			creditAppCacheModel.CustomerBusinessType = null;
		}

		Date CustomerBusinessStartDate = getCustomerBusinessStartDate();

		if (CustomerBusinessStartDate != null) {
			creditAppCacheModel.CustomerBusinessStartDate = CustomerBusinessStartDate.getTime();
		}
		else {
			creditAppCacheModel.CustomerBusinessStartDate = Long.MIN_VALUE;
		}

		creditAppCacheModel.CustomerBusinessIncorporatedState = getCustomerBusinessIncorporatedState();

		String CustomerBusinessIncorporatedState = creditAppCacheModel.CustomerBusinessIncorporatedState;

		if ((CustomerBusinessIncorporatedState != null) &&
				(CustomerBusinessIncorporatedState.length() == 0)) {
			creditAppCacheModel.CustomerBusinessIncorporatedState = null;
		}

		creditAppCacheModel.CustomerBusinessFederalTaxID = getCustomerBusinessFederalTaxID();

		String CustomerBusinessFederalTaxID = creditAppCacheModel.CustomerBusinessFederalTaxID;

		if ((CustomerBusinessFederalTaxID != null) &&
				(CustomerBusinessFederalTaxID.length() == 0)) {
			creditAppCacheModel.CustomerBusinessFederalTaxID = null;
		}

		return creditAppCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(75);

		sb.append("{creditAppId=");
		sb.append(getCreditAppId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", vendorId=");
		sb.append(getVendorId());
		sb.append(", creditAppStatusId=");
		sb.append(getCreditAppStatusId());
		sb.append(", productId=");
		sb.append(getProductId());
		sb.append(", termId=");
		sb.append(getTermId());
		sb.append(", purchaseOptionId=");
		sb.append(getPurchaseOptionId());
		sb.append(", rateFactorRuleId=");
		sb.append(getRateFactorRuleId());
		sb.append(", paymentAmount=");
		sb.append(getPaymentAmount());
		sb.append(", equipmentPrice=");
		sb.append(getEquipmentPrice());
		sb.append(", equipmentDesc=");
		sb.append(getEquipmentDesc());
		sb.append(", equipmentLocAsCustomerFlag=");
		sb.append(getEquipmentLocAsCustomerFlag());
		sb.append(", equipmentAddress1=");
		sb.append(getEquipmentAddress1());
		sb.append(", equipmentAddress2=");
		sb.append(getEquipmentAddress2());
		sb.append(", equipmentCity=");
		sb.append(getEquipmentCity());
		sb.append(", equipmentState=");
		sb.append(getEquipmentState());
		sb.append(", equipmentZip=");
		sb.append(getEquipmentZip());
		sb.append(", CustomerName=");
		sb.append(getCustomerName());
		sb.append(", CustomerDBAName=");
		sb.append(getCustomerDBAName());
		sb.append(", CustomerAddress1=");
		sb.append(getCustomerAddress1());
		sb.append(", CustomerAddress2=");
		sb.append(getCustomerAddress2());
		sb.append(", CustomerCity=");
		sb.append(getCustomerCity());
		sb.append(", CustomerState=");
		sb.append(getCustomerState());
		sb.append(", CustomerZip=");
		sb.append(getCustomerZip());
		sb.append(", CustomerContact=");
		sb.append(getCustomerContact());
		sb.append(", CustomerContactPhone=");
		sb.append(getCustomerContactPhone());
		sb.append(", CustomerContactFax=");
		sb.append(getCustomerContactFax());
		sb.append(", CustomerContactEmail=");
		sb.append(getCustomerContactEmail());
		sb.append(", CustomerBusinessDesc=");
		sb.append(getCustomerBusinessDesc());
		sb.append(", CustomerBusinessType=");
		sb.append(getCustomerBusinessType());
		sb.append(", CustomerBusinessStartDate=");
		sb.append(getCustomerBusinessStartDate());
		sb.append(", CustomerBusinessIncorporatedState=");
		sb.append(getCustomerBusinessIncorporatedState());
		sb.append(", CustomerBusinessFederalTaxID=");
		sb.append(getCustomerBusinessFederalTaxID());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(115);

		sb.append("<model><model-name>");
		sb.append("com.tamarack.creekridge.model.CreditApp");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>creditAppId</column-name><column-value><![CDATA[");
		sb.append(getCreditAppId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vendorId</column-name><column-value><![CDATA[");
		sb.append(getVendorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creditAppStatusId</column-name><column-value><![CDATA[");
		sb.append(getCreditAppStatusId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productId</column-name><column-value><![CDATA[");
		sb.append(getProductId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>termId</column-name><column-value><![CDATA[");
		sb.append(getTermId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>purchaseOptionId</column-name><column-value><![CDATA[");
		sb.append(getPurchaseOptionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rateFactorRuleId</column-name><column-value><![CDATA[");
		sb.append(getRateFactorRuleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentAmount</column-name><column-value><![CDATA[");
		sb.append(getPaymentAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>equipmentPrice</column-name><column-value><![CDATA[");
		sb.append(getEquipmentPrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>equipmentDesc</column-name><column-value><![CDATA[");
		sb.append(getEquipmentDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>equipmentLocAsCustomerFlag</column-name><column-value><![CDATA[");
		sb.append(getEquipmentLocAsCustomerFlag());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>equipmentAddress1</column-name><column-value><![CDATA[");
		sb.append(getEquipmentAddress1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>equipmentAddress2</column-name><column-value><![CDATA[");
		sb.append(getEquipmentAddress2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>equipmentCity</column-name><column-value><![CDATA[");
		sb.append(getEquipmentCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>equipmentState</column-name><column-value><![CDATA[");
		sb.append(getEquipmentState());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>equipmentZip</column-name><column-value><![CDATA[");
		sb.append(getEquipmentZip());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CustomerName</column-name><column-value><![CDATA[");
		sb.append(getCustomerName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CustomerDBAName</column-name><column-value><![CDATA[");
		sb.append(getCustomerDBAName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CustomerAddress1</column-name><column-value><![CDATA[");
		sb.append(getCustomerAddress1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CustomerAddress2</column-name><column-value><![CDATA[");
		sb.append(getCustomerAddress2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CustomerCity</column-name><column-value><![CDATA[");
		sb.append(getCustomerCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CustomerState</column-name><column-value><![CDATA[");
		sb.append(getCustomerState());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CustomerZip</column-name><column-value><![CDATA[");
		sb.append(getCustomerZip());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CustomerContact</column-name><column-value><![CDATA[");
		sb.append(getCustomerContact());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CustomerContactPhone</column-name><column-value><![CDATA[");
		sb.append(getCustomerContactPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CustomerContactFax</column-name><column-value><![CDATA[");
		sb.append(getCustomerContactFax());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CustomerContactEmail</column-name><column-value><![CDATA[");
		sb.append(getCustomerContactEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CustomerBusinessDesc</column-name><column-value><![CDATA[");
		sb.append(getCustomerBusinessDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CustomerBusinessType</column-name><column-value><![CDATA[");
		sb.append(getCustomerBusinessType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CustomerBusinessStartDate</column-name><column-value><![CDATA[");
		sb.append(getCustomerBusinessStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CustomerBusinessIncorporatedState</column-name><column-value><![CDATA[");
		sb.append(getCustomerBusinessIncorporatedState());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CustomerBusinessFederalTaxID</column-name><column-value><![CDATA[");
		sb.append(getCustomerBusinessFederalTaxID());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CreditApp.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CreditApp.class
		};
	private long _creditAppId;
	private long _originalCreditAppId;
	private boolean _setOriginalCreditAppId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _vendorId;
	private long _creditAppStatusId;
	private long _originalCreditAppStatusId;
	private boolean _setOriginalCreditAppStatusId;
	private long _productId;
	private long _termId;
	private long _purchaseOptionId;
	private long _rateFactorRuleId;
	private double _paymentAmount;
	private double _equipmentPrice;
	private String _equipmentDesc;
	private boolean _equipmentLocAsCustomerFlag;
	private String _equipmentAddress1;
	private String _equipmentAddress2;
	private String _equipmentCity;
	private String _equipmentState;
	private String _equipmentZip;
	private String _CustomerName;
	private String _CustomerDBAName;
	private String _CustomerAddress1;
	private String _CustomerAddress2;
	private String _CustomerCity;
	private String _CustomerState;
	private String _CustomerZip;
	private String _CustomerContact;
	private String _CustomerContactPhone;
	private String _CustomerContactFax;
	private String _CustomerContactEmail;
	private String _CustomerBusinessDesc;
	private String _CustomerBusinessType;
	private Date _CustomerBusinessStartDate;
	private String _CustomerBusinessIncorporatedState;
	private String _CustomerBusinessFederalTaxID;
	private long _columnBitmask;
	private CreditApp _escapedModel;
}